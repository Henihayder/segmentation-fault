#!/usr/bin/env ruby
require "fileutils"
require "optparse"

options = {
  only_dependencies: false,
  database: true,
  reset_database: false,
  clear_temp: true,
  restart_rails: true
}

OptionParser.new do |opts|
  opts.banner = "Usage: [options]"

  opts.on("-x", "--reset-database", "Reset database") do
    options[:database] = false
    options[:reset_database] = true
  end

  opts.on("-d", "--[no-]database", "Prepare database") do |option|
    options[:database] = option
  end

  opts.on("-c", "--[no-]clear-temp", "Clear temporary files") do |option|
    options[:clear_temp] = option
  end

  opts.on("-r", "--[no-]restart-server", "Restart Rails server") do |option|
    options[:restart_rails] = option
  end

  opts.on("-o", "--only-dependencies", "Only installs dependencies") do |option|
    options[:only_dependencies] = option
  end
end.parse!

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a way to setup or update your development environment automatically.
  # This script is idempotent, so that you can run it at anytime and get an expectable outcome.
  # Add necessary setup steps to this file.
  puts "== Installing ruby dependencies =="
  system! "gem update --system"
  bundler_version = `tail -n 1 Gemfile.lock`
  system! "gem install bundler -v '#{bundler_version.strip}'"
  system! "bundle install"

  puts "== Installing javascript dependencies =="
  system! "yarn install"

  return if options[:only_dependencies]

  if options[:reset_database]
    puts "\n== Resetting database =="
    system! "bin/rails parallel:drop"
    system! "bin/rails db:reset"
    system! "bin/rails parallel:prepare"
  end

  if options[:database]
    puts "\n== Preparing database =="
    system! "bin/rails db:prepare"
    system! "bin/rails db:test:prepare"
    system! "bin/rails parallel:prepare"
  end

  if options[:clear_temp]
    puts "\n== Removing old logs and tempfiles =="
    system! "bin/rails log:clear --trace"
    system! "bin/rails tmp:clear --trace"
  end

  if options[:restart_rails]
    puts "\n== Restarting application server =="
    system! "bin/rails restart"
  end
end
