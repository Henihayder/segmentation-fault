name: ci
on:
  push:

jobs:
  qa:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    env:
      PGUSER: postgres
      PGPASSWORD: postgres
      TZ: "America/Sao_Paulo"
      BUNDLE_WITHOUT: debug
      MAKE: make -j2

    services:
      postgres:
        image: postgres:12-alpine
        ports: ["5432:5432"]
        env:
          PGDATA: "/var/lib/postgresql/data/pgdata"
          POSTGRES_USER: ${{ env.PGUSER }}
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
          TZ: ${{ env.TZ }}
        options: >-
          --tmpfs /var/lib/postgresql/data/pgdata
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Update PostgreSQL client
        run: |
          sudo apt install -y lsb-release
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list
          sudo apt update
          sudo apt install postgresql-client-12

      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Freeze autogenerated files
        run: |
          chmod 0444 yarn.lock Gemfile.lock

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1

      - name: Disable gems documentation download
        run: |
          echo 'gem: --no-document' >> ~/.gemrc

      - name: Setup Node
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 10.x

      - name: Cache Ruby Dependencies
        uses: actions/cache@v2.1.5
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}

      - name: Cache Node Dependencies
        uses: actions/cache@v2.1.5
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache RSpec results
        uses: actions/cache@v2.1.5
        with:
          path: tmp/rspec
          key: ${{ runner.os }}-parallel-rspec-log-$TIMESTAMP
          restore-keys: |
            ${{ runner.os }}-parallel-rspec-log-

      - name: Setup project
        env:
          DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
        run: bin/setup

      - name: Test assets compilation
        env:
          RAILS_ENV: production
          NODE_ENV: production
          SECRET_KEY_BASE: dummy
          SEGMENT_KEY: dummy
          RAILS_SERVE_STATIC_FILES: true
          APARTMENT_DISABLE_INIT: true
        run: bin/rails assets:precompile --trace

      - name: Run tests
        env:
          RAILS_ENV: test
          NODE_ENV: test
        run: |
          bin/rails assets:precompile
          bin/rails parallel:spec

      - name: Upload coverage result
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: coverage
          path: coverage/

      - name: Upload Rails logs
        uses: actions/upload-artifact@v2.2.4
        if: failure()
        with:
          name: logs
          path: log

      - name: Upload capybara artifacts
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: capybara
          path: |
            tmp/screenshots/*.png
            tmp/capybara/*.html